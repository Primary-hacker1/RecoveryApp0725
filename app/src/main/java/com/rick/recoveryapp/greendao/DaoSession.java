package com.rick.recoveryapp.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.rick.recoveryapp.greendao.entity.ActivitRecord;
import com.rick.recoveryapp.greendao.entity.EcgDataDB;
import com.rick.recoveryapp.greendao.entity.MacDr;
import com.rick.recoveryapp.greendao.entity.PowerAVG;
import com.rick.recoveryapp.greendao.entity.RecordDetailed;

import com.rick.recoveryapp.greendao.ActivitRecordDao;
import com.rick.recoveryapp.greendao.EcgDataDBDao;
import com.rick.recoveryapp.greendao.MacDrDao;
import com.rick.recoveryapp.greendao.PowerAVGDao;
import com.rick.recoveryapp.greendao.RecordDetailedDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig activitRecordDaoConfig;
    private final DaoConfig ecgDataDBDaoConfig;
    private final DaoConfig macDrDaoConfig;
    private final DaoConfig powerAVGDaoConfig;
    private final DaoConfig recordDetailedDaoConfig;

    private final ActivitRecordDao activitRecordDao;
    private final EcgDataDBDao ecgDataDBDao;
    private final MacDrDao macDrDao;
    private final PowerAVGDao powerAVGDao;
    private final RecordDetailedDao recordDetailedDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        activitRecordDaoConfig = daoConfigMap.get(ActivitRecordDao.class).clone();
        activitRecordDaoConfig.initIdentityScope(type);

        ecgDataDBDaoConfig = daoConfigMap.get(EcgDataDBDao.class).clone();
        ecgDataDBDaoConfig.initIdentityScope(type);

        macDrDaoConfig = daoConfigMap.get(MacDrDao.class).clone();
        macDrDaoConfig.initIdentityScope(type);

        powerAVGDaoConfig = daoConfigMap.get(PowerAVGDao.class).clone();
        powerAVGDaoConfig.initIdentityScope(type);

        recordDetailedDaoConfig = daoConfigMap.get(RecordDetailedDao.class).clone();
        recordDetailedDaoConfig.initIdentityScope(type);

        activitRecordDao = new ActivitRecordDao(activitRecordDaoConfig, this);
        ecgDataDBDao = new EcgDataDBDao(ecgDataDBDaoConfig, this);
        macDrDao = new MacDrDao(macDrDaoConfig, this);
        powerAVGDao = new PowerAVGDao(powerAVGDaoConfig, this);
        recordDetailedDao = new RecordDetailedDao(recordDetailedDaoConfig, this);

        registerDao(ActivitRecord.class, activitRecordDao);
        registerDao(EcgDataDB.class, ecgDataDBDao);
        registerDao(MacDr.class, macDrDao);
        registerDao(PowerAVG.class, powerAVGDao);
        registerDao(RecordDetailed.class, recordDetailedDao);
    }
    
    public void clear() {
        activitRecordDaoConfig.clearIdentityScope();
        ecgDataDBDaoConfig.clearIdentityScope();
        macDrDaoConfig.clearIdentityScope();
        powerAVGDaoConfig.clearIdentityScope();
        recordDetailedDaoConfig.clearIdentityScope();
    }

    public ActivitRecordDao getActivitRecordDao() {
        return activitRecordDao;
    }

    public EcgDataDBDao getEcgDataDBDao() {
        return ecgDataDBDao;
    }

    public MacDrDao getMacDrDao() {
        return macDrDao;
    }

    public PowerAVGDao getPowerAVGDao() {
        return powerAVGDao;
    }

    public RecordDetailedDao getRecordDetailedDao() {
        return recordDetailedDao;
    }

}
